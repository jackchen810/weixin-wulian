<template>
    <view class="line__chart">
         <ec-canvas id="mychart-dom-bar" canvas-id="mychart-bar" ec="{{ ec }}" ></ec-canvas>
    </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';
import promisify from '@/utils/promisify';
import echarts from '@/ec-canvas/echarts_min.js';
import {
  PAGE_CONTEXT
} from '@/utils/constant';
export default class deviceCharts extends wepy.page {
    config = {
        navigationBarTitleText: '分析',
        usingComponents: {
            "ec-canvas": "../ec-canvas/ec-canvas"
        }
    }
    components = {

    }

    data = {
        ec: {
            disableTouch:true,
            device_name:'',
            devunit_name:'',
            channel_name:'',
            var_name:'',
            seriesHistoryData:[],
            xAxisHistoryData:[],
            onInit: this.initChart,
        },
        device_list: [],
        seriesHistoryData:[],
        xAxisHistoryData:[],
        showRight: false,
        bShowBind:false
    }

    async initChart(canvas, width, height) {
        //this 指向 this.ec
        let params = {
            devunit_name:this.devunit_name,
            var_name:this.var_name,
            limit:30
        }

        console.log('[device_charts]....');
        //let data = await this.onRequestHistoryList(params);
        //console.log('[device_charts], requestHistoryList', data, width, this);

        const getRequest = promisify(wx.request);
        getRequest({
             url: 'https://dsjiaqi.cn/api/gateway/minute1/list',
             method: 'POST',
             data:params,
             header: { 'Content-Type': 'application/json', 'Cookie': wepy.getStorageSync("Cookie") },
        }).then(res=>{
             // success
             this.xAxisHistoryData = res.data.extra.timeList;
             this.seriesHistoryData = res.data.extra.dataList;
             console.log('[device_charts], getChartHistoryData finish');


            const chart = echarts.init(canvas, null, {width: width, height: height});
            console.log('[device_charts], into initChart, initChart', height, width, this);
            canvas.setChart(chart);

            const option = {
                tooltip: {trigger: 'axis'},
                xAxis: {
                    type: 'category',
                    data: this.xAxisHistoryData ,
                },
                yAxis: {
                    type: 'value',
                },
                series: [{
                    data: this.seriesHistoryData,
                    type: 'line',
                  }]
            }

            chart.setOption(option);
            return chart;
        }).catch(res=>{
            tip.error(res.data.ret_msg)
        });
    }

    async getChartHistoryData(params) {
        let that = this;
        let json = await api.getDeviceMinuteData({query: params});
        console.log('[device_charts],json.data', json.data);
        if(json.data.ret_code == 0) {
            that.ec.xAxisHistoryData = json.data.extra.timeList;
            that.ec.seriesHistoryData = json.data.extra.dataList;
            console.log('getChartHistoryData finish');
            that.$apply();
        } else {
          tip.error(json.data.ret_msg)
        }
        that.showLoading = false;
     }

    // option  就是querystring， 页面传入的参数
    onLoad(option) {
        let that = this;
        console.log('[device_charts] onLoad, option:', option);
        this.ec.device_name = option.device_name;
        this.ec.devunit_name = option.devunit_name;
        this.ec.var_name = option.var_name;
        /*
        let params = {
            device_name:option.device_name,
            var_name:option.id,
        }
        this.getChartHistoryData(params);
        */
    }
    onShow(){
        console.log('[device_charts] onShow...');

    }
    onHide(){
        wepy.setStorageSync(PAGE_CONTEXT, this.config.navigationBarTitleText);
    }
    computed = {

    }
    methods = {

    }
    events = {

    }
}

</script>
<style lang="less">

.info_block {
  margin-top: 10rpx;
  .item {
    border-top: 1rpx solid #dbdbdb;
    background: #fff;
    padding: 34rpx 28rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .item:last-child {
    border-bottom: 1rpx solid #dbdbdb;
  }
  .item_content {
    display: flex;
    align-items: center;
    .text {
      margin-left: 20rpx;
      color: #1a1a1a;
    }
  }
  .item_img {
    width: 42rpx;
    height: 42rpx;
  }
  .arrow {
    color: #cccccc;
    font-size: 32rpx;
  }
  .tip {
    color: #999;
    font-size: 24rpx;
    margin-top: 20rpx;
    margin-left: 60rpx;
  }
}
  .line__chart {
    width: 700rpx;
    height: 600rpx;
    margin: 0 auto;
  }

  .ec-canvas {
    width: 100%;
    height: 100%;
  }
</style>
